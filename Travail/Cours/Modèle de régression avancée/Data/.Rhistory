SimuGAsym(10,0) -> X
hist(X)
SimuGAsym(100,0) -> X
hist(X)
SimuGAsym(1000,0) -> X
hist(X)
SimuGAsym(10000,0) -> X
hist(X)
SimuGAsym(10000,0.5) -> X
hist(X)
SimuGAsym(10000,0.9) -> X
hist(X)
dnorm(c(0,1,2,3),mean=2,sd=1)
pnorm(c(0,1,2,3),mean=2,sd=1)
Z <- c(1,2,3,4)
0.5*Z
sqrt(4)
T1 <- c(1,2,3)
T2 <- c(0,1,2)
T1*T2
Scal <- function(mu,delta,N)
{
alpha <- delta/sqrt(1-delta^2)
Z <- SimuGAsym(N,delta)
T1 <- dnorm(Z,mean=mu,sd=1)
T2 <- pnorm(alpha*(Z-mu),mean=0,sd=1)
return(mean(T1*T2))
}
Scal(1,0.5,10)
Scal(1,0.5,100)
Scal(1,0.5,1000)
Scal(1,0.5,10000)
pi
e
exp(1)
(1/(2*sqrt(pi)))*exp(-0.5^2/4)
Scal(0.5,0,10000)
Scal <- function(mu,delta,N)
{
alpha <- delta/sqrt(1-delta^2)
Z <- SimuGAsym(N,delta)
T1 <- dnorm(Z,mean=mu,sd=1)
T2 <- 2*pnorm(alpha*(Z-mu),mean=0,sd=1)
return(mean(T1*T2))
}
Scal(0.5,0,10000)
Scal(0.5,0,100000)
Scal(0.5,0,1000000)
mu <- seq(0:0.1:5)
mu
seq(0,5,0.1)
length(mu)
mu <- seq(0,5,0.1)
scal <-  (1/(2*sqrt(pi)))*exp(-mu^2/4)
scal_emp <- mu
for (i in 1:length(mu))
{
scal_emp[i] <- Scal(mu[i],0,10000)
}
plot(mu,scal,type="l",col="red")
lines(mu,scal_emp,col="blue")
Ratio <- scal_emp/scal
plot(mu,Ration,type="l")
plot(mu,Ratio,type="l")
mu <- seq(0,5,0.1)
scal <-  (1/(2*sqrt(pi)))*exp(-mu^2/4)
scal_emp <- mu
for (i in 1:length(mu))
{
scal_emp[i] <- Scal(mu[i],0,100000)
}
plot(mu,scal,type="l",col="red")
lines(mu,scal_emp,col="blue")
Ratio <- scal_emp/scal
plot(mu,Ratio,type="l")
mu <- seq(0,5,0.1)
scal <-  (1/(2*sqrt(pi)))*exp(-mu^2/4)
scal_emp <- mu
for (i in 1:length(mu))
{
scal_emp[i] <- Scal(mu[i],0,1000000)
}
plot(mu,scal,type="l",col="red")
lines(mu,scal_emp,col="blue")
Ratio <- scal_emp/scal
plot(mu,Ratio,type="l")
Scal(1,0.99,100)
Scal(1,0.99,10000)
lynx
AirPassengers
rnorm(100,0,1)
qnorm(0.9999,0,1)
qnorm(0.99999,0,1)
1/100000
2*ln(100000)
2*log(100000)
sqrt(23.02)
qnorm(0.99999,0,1)
log(100000)*2
sqrt(23)
X <- c(5,20,8,2)
Y <- c(8,12,6,4)
reg <- lm(Y~X)
reg
attributes(reg)
n=200
z=rnorm(n,0,1)
x<-rep(0,n)
x[1]=(rnorm(1)^2-1)/sqrt(2);
x[n]=z[n];
for(i in 0:(n/2-2)){
x[2*i+3]=(z[2*i+2]^2-1)/sqrt(2)
x[2*i+2]=z[2*i+2]}
x
plot(x)
lines(x)
acf(x)
y=x^2
acf(y)
y=abs(x)
acf(y)
acf(x)
y=abs(x)
acf(y)
y=x^2
acf(y)
library(datasets)
obs<-sunspot.year
par(mafrow=c(2,1))
plot(obs)
acf(obs)
n=length(obs)
##-------------------------
##Densité spectrale
##------------------------
om<-seq(0.01,0.5,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/11,col='red')
#log="no", sinon graph en base log_10
#ici |1/sqrt(T)sum x_t exp(-2piom_jti)|^2
spectrum(sunspot.year,taper=0,log="no")
abline(v=1/10,col='red')
##autre méthode à la main
P=abs(2*fft(obs)/n)^2
f=(0:100)/n
plot(f,P[1:101],type="o",xlab="frequency",ylab="periodogram")
####
plot(obs)
###289/26~11
#####Tests
n=200
library(tseries)
##loi normale
obs=rnorm(n,3,4)
res<-qqnorm(obs)
abline(coef=c(3,4),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
#loi student
obs=rt(n,5)
res<-qqnorm(obs)
abline(coef=c(0,1),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
cor(res$x,res$y)
jarque.bera.test(obs)
#loi student
obs=rt(n,5)
res<-qqnorm(obs)
abline(coef=c(0,1),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
#loi expo
obs=rexp(n,1)
res<-qqnorm(obs)
abline(coef=c(1,1),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
#loi uniforme
obs=runif(n,3,4)
res<-qqnorm(obs)
abline(coef=c(3.5,sqrt(1/12)),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
#loi lognormale
obs=rlnorm(n,3,4)
res<-qqnorm(obs)
abline(coef=c(sqrt(1/12),3.5),col='red')
cor(res$x,res$y)
jarque.bera.test(obs)
n=200
z=rnorm(n,0,1)
x<-rep(0,n)
x[1]=(rnorm(1)^2-1)/sqrt(2);
x[n]=z[n];
for(i in 0:(n/2-2)){
x[2*i+3]=(z[2*i+2]^2-1)/sqrt(2)
x[2*i+2]=z[2*i+2]}
x
plot(x)
lines(x)
acf(x)
pacf(x)
y=x^2
acf(y)
library(datasets)
obs<-sunspot.year
par(mafrow=c(2,1))
plot(obs)
acf(obs)
n=length(obs)
n
spectrum(sunspot.year,taper=0,log="no")
abline(v=1/10,col='red')
abline(v=0.63,col='green')
abline(v=0.63,col='green')
##autre méthode à la main
spectrum(sunspot.year,taper=0,log="no")
abline(v=0.63,col='green')
abline(v=0.63,col='red')
abline(v=1/10,col='red')
abline(v=2/10,col='green')
abline(v=2*pi/10,col='green')
##autre méthode à la main
abline(v=6/100,col='green')
abline(v=63/100,col='green')
##autre méthode à la main
spectrum(sunspot.year,taper=0,log="no")
P=abs(2*fft(obs)/n)^2
f=(0:100)/n
plot(f,P[1:101],type="o",xlab="frequency",ylab="periodogram")
spectrum(sunspot.year,taper=0,log="no")
plot(obs)
289/26
om<-seq(0.01,0.5,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/11,col='red')
spectrum(sunspot.year,taper=0,log="no")
abline(v=1/10,col='red')
om<-seq(0.01,0.5,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/11,col='red')
#log="no", sinon graph en base log_10
#ici |1/sqrt(T)sum x_t exp(-2piom_jti)|^2
spectrum(sunspot.year,taper=0,log="no")
abline(v=1/10,col='red')
obs
pi/0.63
om<-seq(0.01,0.5,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/11,col='red')
om
length(om)
per
om<-seq(0.01,0.7,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/11,col='red')
2*pi/11
abline(v=2*pi/10,col='red')
abline(v=2*pi/11,col='green')
spectrum(sunspot.year,taper=0,log="no")
spectrum(sunspot.year,taper=0,log="no")
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/10,col='red')
abline(v=2*pi/11,col='green')
#log="no", sinon graph en base log_10
#ici |1/sqrt(T)sum x_t exp(-2piom_jti)|^2
spectrum(sunspot.year,taper=0,log="no")
spectrum(sunspot.year,taper=0,log="no",xlim=c(0,0.7))
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/10,col='red')
abline(v=2*pi/11,col='green')
spectrum(sunspot.year,taper=0,log="no",xlim=c(0,0.7))
spectrum(sunspot.year,taper=0,log="no",freq=om)
spec.prgram(sunspot.year)
spec.pgram(sunspot.year)
spec.pgram(sunspot.year)
par(mfrow=c(2,1))
plot(om,per,'l')
spec.pgram(sunspot.year)
library(datasets)
obs<-sunspot.year
par(mafrow=c(2,1))
plot(obs)
acf(obs)
n=length(obs)
##-------------------------
##Densité spectrale
##------------------------
om<-seq(0.01,0.7,by=0.01);
per<-rep(0,length(om));
it=0
for(i in om){it<-it+1;
per[it]<-(1/(2*pi*n))*((sum(obs*cos((1:n)*i))^2+sum(obs*sin((1:n)*i))^2))}
par(mfrow=c(2,1))
plot(om,per,'l')
abline(v=2*pi/10,col='red')
abline(v=2*pi/11,col='green')
spectrum(sunspot.year,taper=0,log="no")
abline(v=1/10,col='red')
2*pi
0.63/(2*pi)
2*pi/11
1/11
abline(v=1/11,col='green')
library(datasets)
sunspot
plot(sunspo)
plot(sunspot)
plot(sunspots)
64/12
ln(1)
log(1)
log(2.1)
1/16
log(1.1)
e
exp(1)
log(exp(1)/2)
library(MDPiR)
N <- 32
w <- 0.65
Contrast <- 0.7
x <- seq(-3,3,len=N)
Trials <- 10000
Signal <- dnorm(x,sd=w)
Template <- Signa *cos(2*pi*x*w)
Template <- Signal *cos(2*pi*x*w)
Stimulus <- matrix(Noise <- rnorm(N*Trials),N,Trials) + cbind(matrix(rep(Contrast*Signal,Trials/2),N),matrix(0,N,Trials/2))
plot(x, rowMeans(Stimulus[, 1:(Trials/2)]),     type = "p", ylim = c(-0.25, 0.45), cex = 1.5, xlab = "Physical Dimension",     ylab = "Average Stimulus Modulation")abline(0, 0, col = "grey", lwd = 2)points(x, rowMeans(Stimulus[, -(1:(Trials/2))]),       cex = 1.5, pch = 2)lines(x, Contrast * Signal, lwd = 2)lines(x, Contrast * Template, lty = 2, lwd = 2)
plot(x, rowMeans(Stimulus[, 1:(Trials/2)]),     type = "p", ylim = c(-0.25, 0.45), cex = 1.5, xlab = "Physical Dimension",     ylab = "Average Stimulus Modulation")
plot(x, rowMeans(Stimulus[, 1:(Trials/2)]),type = "p", ylim = c(-0.25, 0.45), ce= 1.5, xlab = "Physical Dimension", ylab = "Average Stimulus Modulation")
abline(0, 0, col = "grey", lwd = 2)
points(x, rowMeans(Stimulus[, -(1:(Trials/2))]),       cex = 1.5, pch = 2)
points(x, rowMeans(Stimulus[, -(1:(Trials/2))]),cex = 1.5, pch = 2)
ines(x, Contrast * Signal, lwd = 2)
lines(x, Contrast * Signal, lwd = 2)
lines(x, Contrast * Template, lty = 2, lwd = 2)
data(Gabor)
warnings()
data(Gabor)
library(datasets)
try ls("package:datasets")
(try ls("package:datasets"))
ls("package:datasets")
data(Gabor)
iris
x <- seq(from=-5,to=5,by=0.05)
x
y <- x / sqrt(x^2)
plot(x,y)
y <- x / sqrt(x^2+O.05^2)
y <- x / sqrt(x^2+O,05^2)
y <- x / sqrt(x^2+0.05^2)
lines(c,y,col="red")
x <- seq(from=-5,to=5,by=0.05)
y <- x / sqrt(x^2)
plot(x,y,type="l")
y <- x / sqrt(x^2)
z <- x / sqrt(x^2+t^2)
t <- 0.05
z <- x / sqrt(x^2+t^2)
lines(x,z,col="red")
u <- sqrt(x^2+t^2)
plot(x,u,col="red")
plot(x,u,col=type="l")
u <- sqrt(x^2+t^2)
plot(x,u,type="l")
t <- 4
u <- sqrt(x^2+t^2)
plot(x,u,type="l",col="blue")
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("pbkrtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
CS2 <- c(1.69,1.78,1.88)
Esp <- (6/59, 28/56, 60/60)
Esp <- c(6/59, 28/56, 60/60)
logit <- glm(Esp~CS2,family=binomial)
1/3*13,5
1/3*13.5+ 2/3*12
1/3*11+ 2/3*8
1/3*13.5+ 2/3*9.5
1/3*13.5+ 2/3*12
1/3*11.5+ 2/3*7
1/3*13+ 2/3*12.5
16*2/3+13*1/3
12*2/3+15*1/3
12,5*2/3+12*1/3
12.5*2/3+12*1/3
11.5*2/3+10*1/3
9.5*2/3+13*1/3
10.25*2/3+11*1/3
11.5*2/3+15*1/3
9*2/3+12*1/3
16*2/3+10*1/3
7.75*2/3+15*1/3
15*2/3+16*1/3
11*2/3+13*1/3
11.75*2/3+15*1/3
10*2/3+12*1/3
10*2/3+6*1/3
13.5*2/3+15*1/3
13.5*2/3+10*1/3
12.5*2/3+0*1/3
6.2*2/3+7*1/3
16*2/3+12*1/3
10.5*2/3+11*1/3
8*2/3+19*1/3
12*2/3+17*1/3
10*2/3+20*1/3
11*2/3+19*1/3
11*2/3+16*1/3
11.75*2/3+18*1/3
10.5*2/3+14*1/3
x <- c(5,20,8,2)
y <- c(8,12,6,4)
reg <- lm(y~x)
plot(reg)
attributes(reg)
reg$fitted.values
reg
reg$residuals
reg
summary(reg)
sqrt(0.6*0.4)
0.48989
0.48989*1.66
0.52*0.48
1,96*sqrt(0,4*0,6)
1.96*sqrt(0.4*0.6)
2,33*sqrt(0.4*0.6)
2.33*sqrt(0.4*0.6)
2.33*sqrt(0.4*0.6)
1.96*sqrt(0.4*0.6)
20+12+3*11.5+4*9.5
104.5/9
DVie <- c(65,156,100,134,16,108,121,4,39,143,56,26,22,1,1,5,65)
Gblanc <- c(3.36,2.88,3.63,3.41,3.78,4.02,4,4.23,3.73,3.36,2.88,3.63,3.41,3.78,4.02,4,4.23)
plot(Gblanc,DVie)
boxplot(DVie)
boxplot(Gblanc)
glm1 <- glm(DVie ~ Gblanc, family=Gamma("log"))
glm1
summary(glm1)
glm2 <- glm(DVie~Gblanc,family=Gamma)
summary(glm2)
DVie <- c(65,156,100,134,16,108,121,4,39,143,56,26,22,1,1,5,65)
Gblanc <- c(3.36,2.88,3.63,3.41,3.78,4.02,4,4.23,3.73,3.36,2.88,3.63,3.41,3.78,4.02,4,4.23)
plot(Gblanc,DVie)
glm1 <- glm(DVie ~ Gblanc, family=Gamma("log"))
glm2 <- glm(DVie~Gblanc,family=Gamma)
summary(glm2)
glm1 <- glm(DVie ~ Gblanc, family=Gamma("log"))
#NB: on utilise une modélisation par loi Gamma, qui englobe
# la loi exponentielle -> possible d'affiner ce choix?
glm1
summary(glm1)
glm2 <- glm(DVie~Gblanc,family=Gamma)
summary(glm2)
rnorm(1)
rnorm(1,mean=c(1,1))
rnorm(1,mean=c(0,1,1))
mu1 <- c(1,0)
mu1
rnorm(1,mean=mu1)
X <- rnorm(20,mean=1)
Y <- rnorm(20,mean=0)
plot(X,Y)
setwd("~/Seafile/Ma Bibliothèque/MLG_M2R/Data")
setwd("~/Seafile/Ma Bibliothèque/Enseignements/MLG_M2R/Data")
T <- read.table("televisions.dat",col.names=c("Pays","EV","PT","PP","FV","HV"))
View(`T`)
plot(T[,3],T[,2])
reg1 <- lm(T[,2]~T[,3])
LTV <- log(T[,3])
EV <- T[,2]
plot(LTV,EV)
reg2 <- lm(EV~LTV)
reg2
summary(reg2)
abline(77.89,-4.26,col="red")
Data <- data.frame(Esp = c(FV,HV), LogT = c(LTV,LTV),Sexe= c(rep(0,38),rep(1,38)))
FV <- T[,5]
HV <- T[,6]
plot(FV,LTV,col="red")
points(HV,LTV,pch=0,col="blue")
